Y86-64 Processor: pipe-std.hcl
19 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x100, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = rrmovq, f_instr = rrmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xc
D: instr = rrmovq, rA = %rsp, rB = %rax, valC = 0x0, valP = 0xc, Stat = AOK
E: instr = irmovq, valC = 0x100, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xc, imem_instr = pushq, f_instr = pushq
	Execute: ALU: + 0x100 0x0 --> 0x100

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xe
D: instr = pushq, rA = %rsp, rB = ----, valC = 0x0, valP = 0xe, Stat = AOK
E: instr = rrmovq, valC = 0x0, valA = 0x100, valB = 0x0
   srcA = %rsp, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x100, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xe, imem_instr = popq, f_instr = popq
	Execute: ALU: + 0x100 0x0 --> 0x100

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x10
D: instr = popq, rA = %rdx, rB = ----, valC = 0x0, valP = 0x10, Stat = AOK
E: instr = pushq, valC = 0x0, valA = 0x100, valB = 0x100
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = rrmovq, Cnd = 1, valE = 0x100, valA = 0x100
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x100, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x10, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0xfffffffffffffff8 0x100 --> 0xf8
	Writeback: Wrote 0x100 to register %rsp

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x12
D: instr = subq, rA = %rdx, rB = %rax, valC = 0x0, valP = 0x12, Stat = AOK
E: instr = popq, valC = 0x0, valA = 0xf8, valB = 0xf8
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = %rdx, Stat = AOK
M: instr = pushq, Cnd = 1, valE = 0xf8, valA = 0x100
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = rrmovq, valE = 0x100, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x12, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x8 0xf8 --> 0x100
	Writeback: Wrote 0x100 to register %rax
	Wrote 0x100 to address 0xf8

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x12
D: instr = subq, rA = %rdx, rB = %rax, valC = 0x0, valP = 0x12, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = popq, Cnd = 1, valE = 0x100, valA = 0xf8
   dstE = %rsp, dstM = %rdx, Stat = AOK
W: instr = pushq, valE = 0xf8, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x12, imem_instr = halt, f_instr = halt
	Memory: Read 0x100 from 0xf8
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xf8 to register %rsp

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x13
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x13, Stat = HLT
E: instr = subq, valC = 0x0, valA = 0x100, valB = 0x100
   srcA = %rdx, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = popq, valE = 0x100, valM = 0x100, dstE = %rsp, dstM = %rdx, Stat = AOK
	Fetch: f_pc = 0x13, imem_instr = halt, f_instr = halt
	Execute: ALU: - 0x100 0x100 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x100 to register %rsp
	Writeback: Wrote 0x100 to register %rdx

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x14, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = subq, Cnd = 1, valE = 0x0, valA = 0x100
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x15
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x15, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = subq, valE = 0x0, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x15, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rax

Cycle 10. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x16
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x16, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x16, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
11 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rdx:	0x0000000000000000	0x0000000000000100
%rsp:	0x0000000000000000	0x0000000000000100
Changed Memory State:
0x00f8:	0x0000000000000000	0x0000000000000100
ISA Check Succeeds
CPI: 7 cycles/6 instructions = 1.17
