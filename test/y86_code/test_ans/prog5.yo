Y86-64 Processor: pipe-std.hcl
53 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rdx, valC = 0x80, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovq, rA = ----, rB = %rcx, valC = 0x3, valP = 0x14, Stat = AOK
E: instr = irmovq, valC = 0x80, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x80 0x0 --> 0x80

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1e
D: instr = rmmovq, rA = %rcx, rB = %rdx, valC = 0x0, valP = 0x1e, Stat = AOK
E: instr = irmovq, valC = 0x3, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x80, valA = 0x0
   dstE = %rdx, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x1e, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x3 0x0 --> 0x3

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x28
D: instr = irmovq, rA = ----, rB = %rbx, valC = 0xa, valP = 0x28, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x3, valB = 0x80
   srcA = %rcx, srcB = %rdx, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x3, valA = 0x0
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x80, valM = 0x0, dstE = %rdx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x28, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x0 0x80 --> 0x80
	Writeback: Wrote 0x80 to register %rdx

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x32
D: instr = mrmovq, rA = %rax, rB = %rdx, valC = 0x0, valP = 0x32, Stat = AOK
E: instr = irmovq, valC = 0xa, valA = 0x80, valB = 0x80
   srcA = ----, srcB = ----, dstE = %rbx, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x80, valA = 0x3
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x3, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x32, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0xa 0x0 --> 0xa
	Writeback: Wrote 0x3 to register %rcx
	Wrote 0x3 to address 0x80

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = addq, rA = %rbx, rB = %rax, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x80
   srcA = ----, srcB = %rdx, dstE = ----, dstM = %rax, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0xa, valA = 0x80
   dstE = %rbx, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x80, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x34, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x80 --> 0x80

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x34
D: instr = addq, rA = %rbx, rB = %rax, valC = 0x0, valP = 0x34, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x80, valA = 0x0
   dstE = ----, dstM = %rax, Stat = AOK
W: instr = irmovq, valE = 0xa, valM = 0x0, dstE = %rbx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x34, imem_instr = halt, f_instr = halt
	Memory: Read 0x3 from 0x80
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xa to register %rbx

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x35
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x35, Stat = HLT
E: instr = addq, valC = 0x0, valA = 0xa, valB = 0x3
   srcA = %rbx, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x80, valM = 0x3, dstE = ----, dstM = %rax, Stat = AOK
	Fetch: f_pc = 0x35, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0xa 0x3 --> 0xd
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x3 to register %rax

Cycle 9. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x36
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x36, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = addq, Cnd = 1, valE = 0xd, valA = 0xa
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x36, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 10. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x37
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x37, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = addq, valE = 0xd, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x37, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xd to register %rax

Cycle 11. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x38
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x38, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x38, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
12 instructions executed
Status = HLT
Condition Codes: Z=0 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x000000000000000d
%rcx:	0x0000000000000000	0x0000000000000003
%rdx:	0x0000000000000000	0x0000000000000080
%rbx:	0x0000000000000000	0x000000000000000a
Changed Memory State:
0x0080:	0x0000000000000000	0x0000000000000003
ISA Check Succeeds
CPI: 8 cycles/7 instructions = 1.14
