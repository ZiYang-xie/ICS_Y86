Y86-64 Processor: pipe-std.hcl
25 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x100, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovq, rA = ----, rB = %rax, valC = 0xabcd, valP = 0x14, Stat = AOK
E: instr = irmovq, valC = 0x100, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = pushq, f_instr = pushq
	Execute: ALU: + 0x100 0x0 --> 0x100

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x16
D: instr = pushq, rA = %rax, rB = ----, valC = 0x0, valP = 0x16, Stat = AOK
E: instr = irmovq, valC = 0xabcd, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x100, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x16, imem_instr = popq, f_instr = popq
	Execute: ALU: + 0xabcd 0x0 --> 0xabcd

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x18
D: instr = popq, rA = %rsp, rB = ----, valC = 0x0, valP = 0x18, Stat = AOK
E: instr = pushq, valC = 0x0, valA = 0xabcd, valB = 0x100
   srcA = %rax, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0xabcd, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x100, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x18, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0xfffffffffffffff8 0x100 --> 0xf8
	Writeback: Wrote 0x100 to register %rsp

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x19
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x19, Stat = HLT
E: instr = popq, valC = 0x0, valA = 0xf8, valB = 0xf8
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = %rsp, Stat = AOK
M: instr = pushq, Cnd = 1, valE = 0xf8, valA = 0xabcd
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0xabcd, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x19, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x8 0xf8 --> 0x100
	Writeback: Wrote 0xabcd to register %rax
	Wrote 0xabcd to address 0xf8

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1a
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1a, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = popq, Cnd = 1, valE = 0x100, valA = 0xf8
   dstE = %rsp, dstM = %rsp, Stat = AOK
W: instr = pushq, valE = 0xf8, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1a, imem_instr = halt, f_instr = halt
	Memory: Read 0xabcd from 0xf8
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0xf8 to register %rsp

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1b
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1b, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = popq, valE = 0x100, valM = 0xabcd, dstE = %rsp, dstM = %rsp, Stat = AOK
	Fetch: f_pc = 0x1b, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x100 to register %rsp
	Writeback: Wrote 0xabcd to register %rsp

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1c
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x1c, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x1c, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
9 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x000000000000abcd
%rsp:	0x0000000000000000	0x000000000000abcd
Changed Memory State:
0x00f8:	0x0000000000000000	0x000000000000abcd
ISA Check Succeeds
CPI: 5 cycles/5 instructions = 1.00
