Y86-64 Processor: pipe-std.hcl
43 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = xorq, f_instr = xorq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x2
D: instr = xorq, rA = %rax, rB = %rax, valC = 0x0, valP = 0x2, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x2, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x16
D: instr = jne, rA = ----, rB = ----, valC = 0x16, valP = 0xb, Stat = AOK
E: instr = xorq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %rax, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x16, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: ^ 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x20
D: instr = irmovq, rA = ----, rB = %rdx, valC = 0x2, valP = 0x20, Stat = AOK
E: instr = jne, valC = 0x16, valA = 0xb, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = xorq, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x20, imem_instr = irmovq, f_instr = irmovq
	Execute: instr = jne, cc = Z=1 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x2a
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jne, Cnd = 0, valE = 0x0, valA = 0xb
   dstE = ----, dstM = ----, Stat = AOK
W: instr = xorq, valE = 0x0, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0xb, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rax

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x15
D: instr = irmovq, rA = ----, rB = %rax, valC = 0x1, valP = 0x15, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x15, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x16
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x16, Stat = HLT
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x16, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x20
D: instr = irmovq, rA = ----, rB = %rdx, valC = 0x2, valP = 0x20, Stat = AOK
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x20, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x2a
D: instr = irmovq, rA = ----, rB = %rbx, valC = 0x3, valP = 0x2a, Stat = AOK
E: instr = irmovq, valC = 0x2, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdx, dstM = ----, Stat = AOK
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x2a, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x2 0x0 --> 0x2
	Writeback: Wrote 0x1 to register %rax

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x2b
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x2b, Stat = HLT
E: instr = irmovq, valC = 0x3, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rbx, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x2b, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x3 0x0 --> 0x3
10 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x0000000000000001
Changed Memory State:
ISA Check Succeeds
CPI: 6 cycles/4 instructions = 1.50
