Y86-64 Processor: pipe-std.hcl
141 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x200, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = call, f_instr = call
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x38
D: instr = call, rA = ----, rB = ----, valC = 0x38, valP = 0x13, Stat = AOK
E: instr = irmovq, valC = 0x200, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x38, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x200 0x0 --> 0x200

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x42
D: instr = irmovq, rA = ----, rB = %rdi, valC = 0x18, valP = 0x42, Stat = AOK
E: instr = call, valC = 0x38, valA = 0x13, valB = 0x200
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x200, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x42, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0xfffffffffffffff8 0x200 --> 0x1f8

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x4c
D: instr = irmovq, rA = ----, rB = %rsi, valC = 0x4, valP = 0x4c, Stat = AOK
E: instr = irmovq, valC = 0x18, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x1f8, valA = 0x13
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x200, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x4c, imem_instr = call, f_instr = call
	Execute: ALU: + 0x18 0x0 --> 0x18
	Writeback: Wrote 0x200 to register %rsp
	Wrote 0x13 to address 0x1f8

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x56
D: instr = call, rA = ----, rB = ----, valC = 0x56, valP = 0x55, Stat = AOK
E: instr = irmovq, valC = 0x4, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x18, valA = 0x0
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = call, valE = 0x1f8, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x56, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x4 0x0 --> 0x4
	Writeback: Wrote 0x1f8 to register %rsp

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x60
D: instr = irmovq, rA = ----, rB = %r8, valC = 0x8, valP = 0x60, Stat = AOK
E: instr = call, valC = 0x56, valA = 0x55, valB = 0x1f8
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x4, valA = 0x0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x18, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x60, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0xfffffffffffffff8 0x1f8 --> 0x1f0
	Writeback: Wrote 0x18 to register %rdi

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6a
D: instr = irmovq, rA = ----, rB = %r9, valC = 0x1, valP = 0x6a, Stat = AOK
E: instr = irmovq, valC = 0x8, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r8, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x1f0, valA = 0x55
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x4, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6a, imem_instr = xorq, f_instr = xorq
	Execute: ALU: + 0x8 0x0 --> 0x8
	Writeback: Wrote 0x4 to register %rsi
	Wrote 0x55 to address 0x1f0

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6c
D: instr = xorq, rA = %rax, rB = %rax, valC = 0x0, valP = 0x6c, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %r9, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x8, valA = 0x0
   dstE = %r8, dstM = ----, Stat = AOK
W: instr = call, valE = 0x1f0, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6c, imem_instr = andq, f_instr = andq
	Execute: ALU: + 0x1 0x0 --> 0x1
	Writeback: Wrote 0x1f0 to register %rsp

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x6e
D: instr = andq, rA = %rsi, rB = %rsi, valC = 0x0, valP = 0x6e, Stat = AOK
E: instr = xorq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = %rax, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %r9, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x8, valM = 0x0, dstE = %r8, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x6e, imem_instr = jmp, f_instr = jmp
	Execute: ALU: ^ 0x0 0x0 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0x8 to register %r8

Cycle 10. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x87
D: instr = jmp, rA = ----, rB = ----, valC = 0x87, valP = 0x77, Stat = AOK
E: instr = andq, valC = 0x0, valA = 0x4, valB = 0x4
   srcA = %rsi, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = xorq, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %r9, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x87, imem_instr = jne, f_instr = jne
	Execute: ALU: & 0x4 0x4 --> 0x4
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0x1 to register %r9

Cycle 11. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x77
D: instr = jne, rA = ----, rB = ----, valC = 0x77, valP = 0x90, Stat = AOK
E: instr = jmp, valC = 0x87, valA = 0x77, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = andq, Cnd = 0, valE = 0x4, valA = 0x4
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = xorq, valE = 0x0, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x77, imem_instr = mrmovq, f_instr = mrmovq
	Execute: instr = jmp, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rax

Cycle 12. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x81
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x81, Stat = AOK
E: instr = jne, valC = 0x77, valA = 0x90, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = jmp, Cnd = 1, valE = 0x0, valA = 0x77
   dstE = ----, dstM = ----, Stat = AOK
W: instr = andq, valE = 0x4, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x81, imem_instr = addq, f_instr = addq
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x4 to register %rsi

Cycle 13. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x18
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x90
   dstE = ----, dstM = ----, Stat = AOK
W: instr = jmp, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x18 --> 0x18

Cycle 14. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x18, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Memory: Read 0xd000d000d from 0x18
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 15. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0x85, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0xd000d000d, valB = 0x0
   srcA = %r10, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x18, valM = 0xd000d000d, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x85, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0xd000d000d 0x0 --> 0xd000d000d
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xd000d000d to register %r10

Cycle 16. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x87
D: instr = subq, rA = %r9, rB = %rsi, valC = 0x0, valP = 0x87, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x18
   srcA = %r8, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xd000d000d, valA = 0xd000d000d
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x87, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x8 0x18 --> 0x20
	Execute: New cc = Z=0 S=0 O=0

Cycle 17. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x77
D: instr = jne, rA = ----, rB = ----, valC = 0x77, valP = 0x90, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x4
   srcA = %r9, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x20, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xd000d000d, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x77, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: - 0x1 0x4 --> 0x3
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xd000d000d to register %rax

Cycle 18. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x81
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x81, Stat = AOK
E: instr = jne, valC = 0x77, valA = 0x90, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0x3, valA = 0x1
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x20, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x81, imem_instr = addq, f_instr = addq
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x20 to register %rdi

Cycle 19. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x20
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x90
   dstE = ----, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x3, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x20 --> 0x20
	Writeback: Wrote 0x3 to register %rsi

Cycle 20. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x20, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Memory: Read 0xc000c000c0 from 0x20
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 21. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0x85, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0xc000c000c0, valB = 0xd000d000d
   srcA = %r10, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x20, valM = 0xc000c000c0, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x85, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0xc000c000c0 0xd000d000d --> 0xcd00cd00cd
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xc000c000c0 to register %r10

Cycle 22. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x87
D: instr = subq, rA = %r9, rB = %rsi, valC = 0x0, valP = 0x87, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x20
   srcA = %r8, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xcd00cd00cd, valA = 0xc000c000c0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x87, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x8 0x20 --> 0x28
	Execute: New cc = Z=0 S=0 O=0

Cycle 23. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x77
D: instr = jne, rA = ----, rB = ----, valC = 0x77, valP = 0x90, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x3
   srcA = %r9, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x28, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xcd00cd00cd, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x77, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: - 0x1 0x3 --> 0x2
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xcd00cd00cd to register %rax

Cycle 24. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x81
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x81, Stat = AOK
E: instr = jne, valC = 0x77, valA = 0x90, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0x2, valA = 0x1
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x28, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x81, imem_instr = addq, f_instr = addq
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x28 to register %rdi

Cycle 25. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x28
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x90
   dstE = ----, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x2, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x28 --> 0x28
	Writeback: Wrote 0x2 to register %rsi

Cycle 26. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x28, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Memory: Read 0xb000b000b00 from 0x28
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 27. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0x85, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0xb000b000b00, valB = 0xcd00cd00cd
   srcA = %r10, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x28, valM = 0xb000b000b00, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x85, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0xb000b000b00 0xcd00cd00cd --> 0xbcd0bcd0bcd
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xb000b000b00 to register %r10

Cycle 28. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x87
D: instr = subq, rA = %r9, rB = %rsi, valC = 0x0, valP = 0x87, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x28
   srcA = %r8, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xbcd0bcd0bcd, valA = 0xb000b000b00
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x87, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x8 0x28 --> 0x30
	Execute: New cc = Z=0 S=0 O=0

Cycle 29. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x77
D: instr = jne, rA = ----, rB = ----, valC = 0x77, valP = 0x90, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x2
   srcA = %r9, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x30, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xbcd0bcd0bcd, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x77, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: - 0x1 0x2 --> 0x1
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xbcd0bcd0bcd to register %rax

Cycle 30. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x81
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x81, Stat = AOK
E: instr = jne, valC = 0x77, valA = 0x90, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0x1, valA = 0x1
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x30, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x81, imem_instr = addq, f_instr = addq
	Execute: instr = jne, cc = Z=0 S=0 O=0, branch taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x30 to register %rdi

Cycle 31. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x30
   srcA = ----, srcB = %rdi, dstE = ----, dstM = %r10, Stat = AOK
M: instr = jne, Cnd = 1, valE = 0x0, valA = 0x90
   dstE = ----, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x1, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Execute: ALU: + 0x0 0x30 --> 0x30
	Writeback: Wrote 0x1 to register %rsi

Cycle 32. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = addq, rA = %r10, rB = %rax, valC = 0x0, valP = 0x83, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x30, valA = 0x0
   dstE = ----, dstM = %r10, Stat = AOK
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x83, imem_instr = addq, f_instr = addq
	Memory: Read 0xa000a000a000 from 0x30
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 33. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x85
D: instr = addq, rA = %r8, rB = %rdi, valC = 0x0, valP = 0x85, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0xa000a000a000, valB = 0xbcd0bcd0bcd
   srcA = %r10, srcB = %rax, dstE = %rax, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x30, valM = 0xa000a000a000, dstE = ----, dstM = %r10, Stat = AOK
	Fetch: f_pc = 0x85, imem_instr = subq, f_instr = subq
	Execute: ALU: + 0xa000a000a000 0xbcd0bcd0bcd --> 0xabcdabcdabcd
	Execute: New cc = Z=0 S=0 O=0
	Writeback: Wrote 0xa000a000a000 to register %r10

Cycle 34. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x87
D: instr = subq, rA = %r9, rB = %rsi, valC = 0x0, valP = 0x87, Stat = AOK
E: instr = addq, valC = 0x0, valA = 0x8, valB = 0x30
   srcA = %r8, srcB = %rdi, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0xabcdabcdabcd, valA = 0xa000a000a000
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x87, imem_instr = jne, f_instr = jne
	Execute: ALU: + 0x8 0x30 --> 0x38
	Execute: New cc = Z=0 S=0 O=0

Cycle 35. CC=Z=0 S=0 O=0, Stat=AOK
F: predPC = 0x77
D: instr = jne, rA = ----, rB = ----, valC = 0x77, valP = 0x90, Stat = AOK
E: instr = subq, valC = 0x0, valA = 0x1, valB = 0x1
   srcA = %r9, srcB = %rsi, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = addq, Cnd = 1, valE = 0x38, valA = 0x8
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0xabcdabcdabcd, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x77, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: - 0x1 0x1 --> 0x0
	Execute: New cc = Z=1 S=0 O=0
	Writeback: Wrote 0xabcdabcdabcd to register %rax

Cycle 36. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x81
D: instr = mrmovq, rA = %r10, rB = %rdi, valC = 0x0, valP = 0x81, Stat = AOK
E: instr = jne, valC = 0x77, valA = 0x90, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = subq, Cnd = 0, valE = 0x0, valA = 0x1
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = addq, valE = 0x38, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x81, imem_instr = addq, f_instr = addq
	Execute: instr = jne, cc = Z=1 S=0 O=0, branch not taken
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x38 to register %rdi

Cycle 37. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x83
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = jne, Cnd = 0, valE = 0x0, valA = 0x90
   dstE = ----, dstM = ----, Stat = AOK
W: instr = subq, valE = 0x0, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x90, imem_instr = ret, f_instr = ret
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rsi

Cycle 38. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x91, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = jne, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x91, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 39. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x1f0, valB = 0x1f0
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x91, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x8 0x1f0 --> 0x1f8

Cycle 40. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x1f8, valA = 0x1f0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x91, imem_instr = halt, f_instr = halt
	Memory: Read 0x55 from 0x1f0
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 41. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x91
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x1f8, valM = 0x55, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x55, imem_instr = ret, f_instr = ret
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1f8 to register %rsp

Cycle 42. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x56
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x56, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x56, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 43. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x56
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x1f8, valB = 0x1f8
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x56, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x8 0x1f8 --> 0x200

Cycle 44. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x56
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x200, valA = 0x1f8
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x56, imem_instr = irmovq, f_instr = irmovq
	Memory: Read 0x13 from 0x1f8
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 45. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x56
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x200, valM = 0x13, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x200 to register %rsp

Cycle 46. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x14, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 47. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x15
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x15, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x15, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 48. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x16
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x16, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x16, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 49. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x17
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x17, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x17, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
50 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x0000abcdabcdabcd
%rsp:	0x0000000000000000	0x0000000000000200
%rdi:	0x0000000000000000	0x0000000000000038
%r8:	0x0000000000000000	0x0000000000000008
%r9:	0x0000000000000000	0x0000000000000001
%r10:	0x0000000000000000	0x0000a000a000a000
Changed Memory State:
0x01f0:	0x0000000000000000	0x0000000000000055
0x01f8:	0x0000000000000000	0x0000000000000013
ISA Check Succeeds
CPI: 46 cycles/34 instructions = 1.35
