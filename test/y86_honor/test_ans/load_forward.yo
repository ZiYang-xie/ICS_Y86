Y86-64 Processor: pipe-std.hcl
98 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsp, valC = 0x200, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = call, f_instr = call
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x38
D: instr = call, rA = ----, rB = ----, valC = 0x38, valP = 0x13, Stat = AOK
E: instr = irmovq, valC = 0x200, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x38, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x200 0x0 --> 0x200

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x42
D: instr = irmovq, rA = ----, rB = %rcx, valC = 0x18, valP = 0x42, Stat = AOK
E: instr = call, valC = 0x38, valA = 0x13, valB = 0x200
   srcA = ----, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x200, valA = 0x0
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x42, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0xfffffffffffffff8 0x200 --> 0x1f8

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x4c
D: instr = irmovq, rA = ----, rB = %rax, valC = 0x1234, valP = 0x4c, Stat = AOK
E: instr = irmovq, valC = 0x18, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rcx, dstM = ----, Stat = AOK
M: instr = call, Cnd = 1, valE = 0x1f8, valA = 0x13
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x200, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x4c, imem_instr = mrmovq, f_instr = mrmovq
	Execute: ALU: + 0x18 0x0 --> 0x18
	Writeback: Wrote 0x200 to register %rsp
	Wrote 0x13 to address 0x1f8

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x56
D: instr = mrmovq, rA = %rdx, rB = %rcx, valC = 0x0, valP = 0x56, Stat = AOK
E: instr = irmovq, valC = 0x1234, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rax, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x18, valA = 0x0
   dstE = %rcx, dstM = ----, Stat = AOK
W: instr = call, valE = 0x1f8, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x56, imem_instr = pushq, f_instr = pushq
	Execute: ALU: + 0x1234 0x0 --> 0x1234
	Writeback: Wrote 0x1f8 to register %rsp

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x58
D: instr = pushq, rA = %rdx, rB = ----, valC = 0x0, valP = 0x58, Stat = AOK
E: instr = mrmovq, valC = 0x0, valA = 0x0, valB = 0x18
   srcA = ----, srcB = %rcx, dstE = ----, dstM = %rdx, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1234, valA = 0x0
   dstE = %rax, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x18, valM = 0x0, dstE = %rcx, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x58, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x18 --> 0x18
	Writeback: Wrote 0x18 to register %rcx

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x58
D: instr = pushq, rA = %rdx, rB = ----, valC = 0x0, valP = 0x58, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = mrmovq, Cnd = 1, valE = 0x18, valA = 0x0
   dstE = ----, dstM = %rdx, Stat = AOK
W: instr = irmovq, valE = 0x1234, valM = 0x0, dstE = %rax, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x58, imem_instr = nop, f_instr = nop
	Memory: Read 0x100 from 0x18
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1234 to register %rax

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x59
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x59, Stat = AOK
E: instr = pushq, valC = 0x0, valA = 0x100, valB = 0x1f8
   srcA = %rdx, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = mrmovq, valE = 0x18, valM = 0x100, dstE = ----, dstM = %rdx, Stat = AOK
	Fetch: f_pc = 0x59, imem_instr = popq, f_instr = popq
	Execute: ALU: + 0xfffffffffffffff8 0x1f8 --> 0x1f0
	Writeback: Wrote 0x100 to register %rdx

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x5b
D: instr = popq, rA = %rdx, rB = ----, valC = 0x0, valP = 0x5b, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = pushq, Cnd = 1, valE = 0x1f0, valA = 0x100
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x5b, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x0 0x0 --> 0x0
	Wrote 0x100 to address 0x1f0

Cycle 10. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = rmmovq, rA = %rax, rB = %rdx, valC = 0x0, valP = 0x65, Stat = AOK
E: instr = popq, valC = 0x0, valA = 0x1f0, valB = 0x1f0
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = %rdx, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = pushq, valE = 0x1f0, valM = 0x0, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = ret, f_instr = ret
	Execute: ALU: + 0x8 0x1f0 --> 0x1f8
	Writeback: Wrote 0x1f0 to register %rsp

Cycle 11. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x65
D: instr = rmmovq, rA = %rax, rB = %rdx, valC = 0x0, valP = 0x65, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = popq, Cnd = 1, valE = 0x1f8, valA = 0x1f0
   dstE = %rsp, dstM = %rdx, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x65, imem_instr = ret, f_instr = ret
	Memory: Read 0x100 from 0x1f0
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 12. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x66
D: instr = ret, rA = ----, rB = ----, valC = 0x0, valP = 0x66, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x1234, valB = 0x100
   srcA = %rax, srcB = %rdx, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = popq, valE = 0x1f8, valM = 0x100, dstE = %rsp, dstM = %rdx, Stat = AOK
	Fetch: f_pc = 0x66, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x100 --> 0x100
	Writeback: Wrote 0x1f8 to register %rsp
	Writeback: Wrote 0x100 to register %rdx

Cycle 13. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x66
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = ret, valC = 0x0, valA = 0x1f8, valB = 0x1f8
   srcA = %rsp, srcB = %rsp, dstE = %rsp, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x100, valA = 0x1234
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x66, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x8 0x1f8 --> 0x200
	Wrote 0x1234 to address 0x100

Cycle 14. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x66
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = ret, Cnd = 1, valE = 0x200, valA = 0x1f8
   dstE = %rsp, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x100, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x66, imem_instr = halt, f_instr = halt
	Memory: Read 0x13 from 0x1f8
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 15. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x66
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = ret, valE = 0x200, valM = 0x13, dstE = %rsp, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x13, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x200 to register %rsp

Cycle 16. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x14, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 17. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x15
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x15, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x15, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 18. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x16
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x16, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x16, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 19. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x17
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x17, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x17, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
20 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rax:	0x0000000000000000	0x0000000000001234
%rcx:	0x0000000000000000	0x0000000000000018
%rdx:	0x0000000000000000	0x0000000000000100
%rsp:	0x0000000000000000	0x0000000000000200
Changed Memory State:
0x0100:	0x0000000000000000	0x0000000000001234
0x01f0:	0x0000000000000000	0x0000000000000100
0x01f8:	0x0000000000000000	0x0000000000000013
ISA Check Succeeds
CPI: 16 cycles/11 instructions = 1.45
