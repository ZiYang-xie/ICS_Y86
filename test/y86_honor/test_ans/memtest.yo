Y86-64 Processor: pipe-std.hcl
33 bytes of code read

Cycle 0. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x0
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x0, Stat = BUB
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x0, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 1. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0xa
D: instr = irmovq, rA = ----, rB = %rsi, valC = 0x1, valP = 0xa, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = BUB
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0xa, imem_instr = irmovq, f_instr = irmovq
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 2. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x14
D: instr = irmovq, rA = ----, rB = %rdi, valC = 0x0, valP = 0x14, Stat = AOK
E: instr = irmovq, valC = 0x1, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rsi, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x14, imem_instr = rmmovq, f_instr = rmmovq
	Execute: ALU: + 0x1 0x0 --> 0x1

Cycle 3. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1e
D: instr = rmmovq, rA = %rsi, rB = %rdi, valC = 0x0, valP = 0x1e, Stat = AOK
E: instr = irmovq, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = %rdi, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x1, valA = 0x0
   dstE = %rsi, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = BUB
	Fetch: f_pc = 0x1e, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 4. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x1f
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x1f, Stat = AOK
E: instr = rmmovq, valC = 0x0, valA = 0x1, valB = 0x0
   srcA = %rsi, srcB = %rdi, dstE = ----, dstM = ----, Stat = AOK
M: instr = irmovq, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = %rdi, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x1, valM = 0x0, dstE = %rsi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x1f, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x1 to register %rsi

Cycle 5. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x20
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x20, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = rmmovq, Cnd = 1, valE = 0x0, valA = 0x1
   dstE = ----, dstM = ----, Stat = AOK
W: instr = irmovq, valE = 0x0, valM = 0x0, dstE = %rdi, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x20, imem_instr = nop, f_instr = nop
	Execute: ALU: + 0x0 0x0 --> 0x0
	Writeback: Wrote 0x0 to register %rdi
	Wrote 0x1 to address 0x0

Cycle 6. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x21
D: instr = nop, rA = ----, rB = ----, valC = 0x0, valP = 0x21, Stat = AOK
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = rmmovq, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x21, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 7. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x22
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x22, Stat = HLT
E: instr = nop, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = AOK
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x22, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 8. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x23
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x23, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = AOK
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x23, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 9. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x24
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x24, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = halt, Cnd = 1, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = HLT
W: instr = nop, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = AOK
	Fetch: f_pc = 0x24, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0

Cycle 10. CC=Z=1 S=0 O=0, Stat=AOK
F: predPC = 0x25
D: instr = halt, rA = ----, rB = ----, valC = 0x0, valP = 0x25, Stat = HLT
E: instr = halt, valC = 0x0, valA = 0x0, valB = 0x0
   srcA = ----, srcB = ----, dstE = ----, dstM = ----, Stat = HLT
M: instr = nop, Cnd = 0, valE = 0x0, valA = 0x0
   dstE = ----, dstM = ----, Stat = BUB
W: instr = halt, valE = 0x0, valM = 0x0, dstE = ----, dstM = ----, Stat = HLT
	Fetch: f_pc = 0x25, imem_instr = halt, f_instr = halt
	Execute: ALU: + 0x0 0x0 --> 0x0
11 instructions executed
Status = HLT
Condition Codes: Z=1 S=0 O=0
Changed Register State:
%rsi:	0x0000000000000000	0x0000000000000001
Changed Memory State:
0x0000:	0x000000000001f630	0x0000000000000001
ISA Check Succeeds
CPI: 7 cycles/7 instructions = 1.00
