//
// Created by 谢子飏 on 2020/12/01.
//

#include <gtest/gtest.h>

#include "../src/Controller.h"
#include "../src/Device.h"
#include "test_util.h"

enum {
    RAX = 0,
    RCX = 1,
    RDX = 2,
    RBX = 3,
    RSP = 4,
    RBP = 5,
    RSI = 6,
    RDI = 7,
    R8 = 8,
    R9 = 9,
    R10 = 0xa,
    R11 = 0xb,
    R12 = 0xc,
    R13 = 0xd,
    R14 = 0xe,
    R15 = 0xf,
    ZF = 0,
    SF = 1,
    OF = 2
};

class FlashCodeTest : public testing::Test {
   protected:
    void SetUp() override {
        c.FlashCode("1900000000000000112233eeff000ff0");
        c.Run();
    }
    Controller c;
};

TEST_F(FlashCodeTest, test_FlashCode) {
    c.Run();
    EXPECT_EQ(c.d.Mem[0], 17);
    EXPECT_EQ(c.d.Mem[0], 17);
    EXPECT_EQ(c.d.Mem[1], 34);
    EXPECT_EQ(c.d.Mem[2], 51);
    EXPECT_EQ(c.d.Mem[3], 0xe * 17);
    EXPECT_EQ(c.d.Mem[4], 0xf * 17);
    EXPECT_EQ(c.d.Mem[5], 0);
    EXPECT_EQ(c.d.Mem[6], 0xf);
    EXPECT_EQ(c.d.Mem[7], 0xf * 16);
}
class RealCodeTest : public testing::Test {
   protected:
    Controller c;
};

TEST_F(RealCodeTest, test_prog2) {
    c.FlashCode(
        "190000000000000030f20a0000000000000030f003000000000000001010602000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x000000000000000d);
    EXPECT_EQ(c.d.Reg[RDX], 0x000000000000000a);
}

TEST_F(RealCodeTest, test_pushquestion) {
    c.FlashCode("0f0000000000000030f40001000000000000a04fb00f00");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000000100);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000100);
}

TEST_F(RealCodeTest, test_asumi) {
    c.FlashCode(
        "8d0000000000000030f4000100000000000080380000000000000000000000000d000d"
        "000d000000c000c000c0000000000b000b000b000000a000a000a0000030f718000000"
        "0000000030f60400000000000000805600000000000000906300626670830000000000"
        "000050a7000000000000000060a0c0f70800000000000000c0f6ffffffffffffffff74"
        "6300000000000000900000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "00000000000000000000000000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000abcdabcdabcd);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000100);
    EXPECT_EQ(c.d.Reg[R10], 0x0000a000a000a000);
}

TEST_F(RealCodeTest, test_prog6) {
    c.FlashCode(
        "230000000000000030f4300000000000000080200000000000000030f20a0000000000"
        "000000000090202300000000000000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RDX], 0x000000000000000a);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000030);
}

TEST_F(RealCodeTest, test_prog7) {
    c.FlashCode(
        "2b00000000000000630074160000000000000030f001000000000000000030f2020000"
        "000000000030f3030000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000000001);
}

TEST_F(RealCodeTest, test_prog3) {
    c.FlashCode(
        "180000000000000030f20a0000000000000030f0030000000000000010602000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x000000000000000d);
    EXPECT_EQ(c.d.Reg[RDX], 0x000000000000000a);
}

TEST_F(RealCodeTest, test_prog8) {
    c.FlashCode(
        "170000000000000030f20a0000000000000030f20300000000000000202000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000000003);
    EXPECT_EQ(c.d.Reg[RDX], 0x0000000000000003);
}

TEST_F(RealCodeTest, test_pushtest) {
    c.FlashCode("130000000000000030f400010000000000002040a04fb02f612000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RDX], 0x0000000000000100);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000100);
}

TEST_F(RealCodeTest, test_prog10) {
    c.FlashCode(
        "240000000000000030f001000000000000006344a00f600030f0020000000000000030"
        "f00300000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SADR);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000000001);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000000);
}

TEST_F(RealCodeTest, test_prog9) {
    c.FlashCode(
        "1600000000000000630074160000000000000030f0010000000000000000ff");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000000001);
}

TEST_F(RealCodeTest, test_abs_asum_cmov) {
    c.FlashCode(
        "970000000000000030f4000200000000000080380000000000000000000000000d000d"
        "000d00000040ff3fff3fffffff000b000b000b00000060ff5fff5fffff30f718000000"
        "0000000030f604000000000000008056000000000000009030f8080000000000000030"
        "f9010000000000000063006266708d0000000000000050a7000000000000000063bb61"
        "ab26ba60a0608761967477000000000000009000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "000000000000000000000000000000000000000000000000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000abcdabcdabcd);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000200);
    EXPECT_EQ(c.d.Reg[R8], 0x0000000000000008);
    EXPECT_EQ(c.d.Reg[R9], 0x0000000000000001);
    EXPECT_EQ(c.d.Reg[R10], 0x0000a000a000a000);
    EXPECT_EQ(c.d.Reg[R11], 0x0000a000a000a000);
}

TEST_F(RealCodeTest, test_ret_hazard) {
    c.FlashCode(
        "210000000000000030f3400000000000000050430000000000000000900030f6050000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000500000000000000000000000000000001600000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RBX], 0x0000000000000040);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000058);
    EXPECT_EQ(c.d.Reg[RSI], 0x0000000000000005);
}

TEST_F(RealCodeTest, test_abs_asum_jmp) {
    c.FlashCode(
        "a00000000000000030f4000200000000000080380000000000000000000000000d000d"
        "000d00000040ff3fff3fffffff000b000b000b00000060ff5fff5fffff30f718000000"
        "0000000030f604000000000000008056000000000000009030f8080000000000000030"
        "f901000000000000006300626670960000000000000050a7000000000000000063bb61"
        "ab71900000000000000020ba60a0608761967477000000000000009000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "000000000000000000000000000000000000000000000000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000abcdabcdabcd);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000200);
    EXPECT_EQ(c.d.Reg[R8], 0x0000000000000008);
    EXPECT_EQ(c.d.Reg[R9], 0x0000000000000001);
    EXPECT_EQ(c.d.Reg[R10], 0x0000a000a000a000);
    EXPECT_EQ(c.d.Reg[R11], 0x0000a000a000a000);
}

TEST_F(RealCodeTest, test_j_cc) {
    c.FlashCode(
        "450000000000000030f6010000000000000030f7020000000000000030f50400000000"
        "00000030f0e0ffffffffffffff30f240000000000000006120733f0000000000000010"
        "00606210101000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 1);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0xffffffffffffffa0);
    EXPECT_EQ(c.d.Reg[RDX], 0x0000000000000040);
    EXPECT_EQ(c.d.Reg[RBP], 0x0000000000000004);
    EXPECT_EQ(c.d.Reg[RSI], 0x0000000000000001);
}

TEST_F(RealCodeTest, test_poptest) {
    c.FlashCode(
        "190000000000000030f4000100000000000030f0cdab000000000000a00fb04f00");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x000000000000abcd);
    EXPECT_EQ(c.d.Reg[RSP], 0x000000000000abcd);
}

TEST_F(RealCodeTest, test_prog4) {
    c.FlashCode(
        "170000000000000030f20a0000000000000030f00300000000000000602000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x000000000000000d);
    EXPECT_EQ(c.d.Reg[RDX], 0x000000000000000a);
}

TEST_F(RealCodeTest, test_cjr) {
    c.FlashCode(
        "430000000000000030f4400000000000000030f03800000000000000a00f6300742c00"
        "00000000000030f00100000000000000009030f302000000000000000030f203000000"
        "0000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SADR);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x38);
    EXPECT_EQ(c.d.Reg[RSP], 0x40);
}

TEST_F(RealCodeTest, test_prog1) {
    c.FlashCode(
        "1a0000000000000030f20a0000000000000030f00300000000000000101010602000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x000000000000000d);
    EXPECT_EQ(c.d.Reg[RDX], 0x000000000000000a);
}

TEST_F(RealCodeTest, test_asum) {
    c.FlashCode(
        "910000000000000030f4000200000000000080380000000000000000000000000d000d"
        "000d000000c000c000c0000000000b000b000b000000a000a000a0000030f718000000"
        "0000000030f604000000000000008056000000000000009030f8080000000000000030"
        "f901000000000000006300626670870000000000000050a7000000000000000060a060"
        "8761967477000000000000009000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "000000000000000000000000000000000000000000000000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000abcdabcdabcd);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000200);
    EXPECT_EQ(c.d.Reg[R8], 0x0000000000000008);
    EXPECT_EQ(c.d.Reg[R9], 0x0000000000000001);
    EXPECT_EQ(c.d.Reg[R10], 0x0000a000a000a000);
}

TEST_F(RealCodeTest, test_prog5) {
    c.FlashCode(
        "350000000000000030f2800000000000000030f1030000000000000040120000000000"
        "00000030f30a0000000000000050020000000000000000603000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x000000000000000d);
    EXPECT_EQ(c.d.Reg[RCX], 0x0000000000000003);
    EXPECT_EQ(c.d.Reg[RDX], 0x0000000000000080);
    EXPECT_EQ(c.d.Reg[RBX], 0x000000000000000a);
}

TEST_F(RealCodeTest, test_asumr) {
    c.FlashCode(
        "950000000000000030f4000200000000000080380000000000000000000000000d000d"
        "000d000000c000c000c0000000000b000b000b000000a000a000a0000030f718000000"
        "0000000030f60400000000000000805600000000000000906300626671940000000000"
        "0000a03f5037000000000000000030faffffffffffffffff60a630fa08000000000000"
        "0060a78056000000000000006030b03f90000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "000000000000000000000000000000000000000000000000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000abcdabcdabcd);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000200);
    EXPECT_EQ(c.d.Reg[R10], 0x0000000000000008);
}

class HonorCodeTest : public testing::Test {
   protected:
    Controller c;
};

TEST_F(HonorCodeTest, test_INS2) {
    c.FlashCode("02000000000000002732");
    c.Run();
    EXPECT_EQ(c.d.Stat, SINS);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
}

TEST_F(HonorCodeTest, test_ex32) {
    c.FlashCode(
        "220000000000000030f2050000000000000030f4000100000000000040240000000000"
        "000000b04f2040");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000000005);
    EXPECT_EQ(c.d.Reg[RDX], 0x0000000000000005);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000005);
}

TEST_F(HonorCodeTest, test_INS3) {
    c.FlashCode("0200000000000000a002");
    c.Run();
    EXPECT_EQ(c.d.Stat, SINS);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000000);
}

TEST_F(HonorCodeTest, test_ex33) {
    c.FlashCode(
        "1b0000000000000030f0230100000000000030f221030000000000006311240260220"
        "0");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000000123);
    EXPECT_EQ(c.d.Reg[RDX], 0x0000000000000642);
}

TEST_F(HonorCodeTest, test_load_forward) {
    c.FlashCode(
        "660000000000000030f400020000000000008038000000000000000000000000000100"
        "000000000000020000000000000003000000000000000400000000000030f118000000"
        "0000000030f0341200000000000050210000000000000000a02f10b02f400200000000"
        "0000000090000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "0000000000000000000000000000000000000000000000000000000000000000000000"
        "000000000000000000000000000000000000000000000000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RAX], 0x0000000000001234);
    EXPECT_EQ(c.d.Reg[RCX], 0x0000000000000018);
    EXPECT_EQ(c.d.Reg[RDX], 0x0000000000000100);
    EXPECT_EQ(c.d.Reg[RSP], 0x0000000000000200);
}

TEST_F(HonorCodeTest, test_overflow1) {
    c.FlashCode(
        "200000000000000030f7000000000000008030f6ffffffffffffffff60677500000000"
        "0000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 1);
    EXPECT_EQ(c.d.Reg[RSI], 0xffffffffffffffff);
}

TEST_F(HonorCodeTest, test_INS4) {
    c.FlashCode("0200000000000000200f");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
}

TEST_F(HonorCodeTest, test_overflow) {
    c.FlashCode(
        "200000000000000030f7ffffffffffffff7f30f6ffffffffffffffff61677100000000"
        "0000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 1);
    EXPECT_EQ(c.d.CFLAG[2], 1);
    EXPECT_EQ(c.d.Reg[RSI], 0xffffffffffffffff);
}

TEST_F(HonorCodeTest, test_INS1) {
    c.FlashCode("020000000000000030f2");
    c.Run();
    EXPECT_EQ(c.d.Stat, SINS);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
}

TEST_F(HonorCodeTest, test_memtest) {
    c.FlashCode(
        "210000000000000030f6010000000000000030f7000000000000000040670000000000"
        "000000101010");
    c.Run();
    EXPECT_EQ(c.d.Stat, SADR);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RSI], 0x0000000000000001);
}

class AdditionalTest : public testing::Test {
   protected:
    Controller c;
};

//.pos 0
// irmovq $64 %rcx
//    isubq $1 %rcx
//    halt
TEST_F(AdditionalTest, test_isubq) {
    c.FlashCode("150000000000000030f14000000000000000c1f1010000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RRCX], 63);
}

TEST_F(AdditionalTest, test_cmpq) {
    c.FlashCode(
        "170000000000000030f1030000000000000030f20500000000000000d12100");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 1);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RRCX], 3);
    EXPECT_EQ(c.d.Reg[RRDX], 5);
}

TEST_F(AdditionalTest, test_makeitpink) {
    c.FlashCode(
        "6e0000000000000030f0cd99f6000000000030f3000000000000000030f10000000000"
        "00000030f4000e00000000000030f2010000000000000040040000000000000000c0f4"
        "0400000000000000c0f10100000000000000403ff80d000000000000e1f14000000000"
        "00000072320000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RRAX], 0xf699cd);
    EXPECT_EQ(c.d.Reg[RRBX], 0);
    EXPECT_EQ(c.d.Reg[RRCX], 64);
}

TEST_F(AdditionalTest, test_rmovs) {
    c.FlashCode(
        "5b0000000000000030f078563482efbeadde400f5b00000000000000503f5b00000000"
        "000000511f5b00000000000000542f5b00000000000000528f5b00000000000000559f"
        "5b0000000000000053af5b0000000000000056bf5b0000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 1);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RRAX], 0xdeadbeef82345678);
    EXPECT_EQ(c.d.Reg[RRCX], 0x82345678);
    EXPECT_EQ(c.d.Reg[RRDX], 0xffffffff82345678);
    EXPECT_EQ(c.d.Reg[RR8], 0x5678);
    EXPECT_EQ(c.d.Reg[RR9], 0x5678);
    EXPECT_EQ(c.d.Reg[RR10], 0x78);
    EXPECT_EQ(c.d.Reg[RR11], 0x78);
}

TEST_F(AdditionalTest, test_mrmovs) {
    c.FlashCode(
        "3d0000000000000030f0efbeadde0000000030f6000000000000000041063d00000000"
        "000000c0f6040000000000000041063d00000000000000503f3d0000000000000000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RRAX], 0xdeadbeef);
    EXPECT_EQ(c.d.Reg[RRSI], 4);
    EXPECT_EQ(c.d.Reg[RRBX], 0xdeadbeefdeadbeef);
}

TEST_F(AdditionalTest, test_arith) {
    c.FlashCode(
        "230000000000000030f0030000000000000030f3100000000000000030f10100000000"
        "0000006830651000");
    c.Run();
    EXPECT_EQ(c.d.Stat, SHLT);
    EXPECT_EQ(c.d.CFLAG[0], 0);
    EXPECT_EQ(c.d.CFLAG[1], 0);
    EXPECT_EQ(c.d.CFLAG[2], 0);
    EXPECT_EQ(c.d.Reg[RRAX], 0x60);
    EXPECT_EQ(c.d.Reg[RRBX], 0x10);
    EXPECT_EQ(c.d.Reg[RRCX], 1);
}